var phonebook=window.phonebook||function(){function a(a){var b;a.at(c)?b=c:0===c?(a.trigger("addContact"),b=0):b=c-1,i=a.at(b)}function b(a){$(window).width()<=525?(g=!0,$(".picked").removeClass("picked"),$(".glyphicon-menu-left").closest("button").show(),$("#contact-view").is(":visible")&&$("#contact-view").css({display:"block",left:"100%"})):(g=!1,$("#contact-list-column").is(":visible")||$("#contact-list-column").css({display:"block",left:"0%"}),$("#contact-view").is(":visible")||$("#contact-view").css({display:"block",left:"0%"}),a.get({cid:i}).trigger("notMobile"),$(".glyphicon-menu-left").closest("button").hide())}var c,d,e,f={},g=!0,h=!1,i="c01",j=!1,k=[{first:"Adam",last:"Johnson",phone:"111-111-1111"},{first:"Vinny",last:"DeFrancesco",phone:"111-111-1111"},{first:"Corey",last:"Tucker",phone:"111-111-1111"},{first:"Emma",last:"Lydon",phone:"111-111-1111"},{first:"Kate",last:"Lowe",phone:"111-111-1111"},{first:"Jess",last:"Guerra",phone:"111-111-1111"},{first:"Zach",last:"Oliphant",phone:"111-111-1111"},{first:"Larry",last:"Oliphant",phone:"111-111-1111"},{first:"Lee",last:"DeFrancesco",phone:"111-111-1111"},{first:"Barry",last:"Lydon",phone:"111-111-1111"},{first:"Derek",last:"Jeter",phone:"111-111-1111"},{first:"Marshawn",last:"Lynch",phone:"111-111-1111"},{first:"Barack",last:"Obama",phone:"111-111-1111"},{first:"Mitt",last:"Romney",phone:"111-111-1111"},{first:"Michelle",last:"Obama",phone:"111-111-1111"},{first:"Ann",last:"Romney",phone:"111-111-1111"},{first:"Abriella",last:"Milazzo",phone:"111-111-1111"},{first:"Ryan",last:"Smith",phone:"111-111-1111"}];return f.Contact=Backbone.Model.extend({initialize:function(){this.on("destroy",this.onDestroy,this)},onDestroy:function(){c=this.collection.indexOf(this)}}),f.SearchView=Backbone.View.extend({el:".top-bar",template:' 		<div class="col-xs-10">            <div class="search-group has-feedback">                <i class="glyphicon glyphicon-search form-control-feedback"></i>                <input type="search" class="form-control searching" placeholder="Search..."></input>            </div>        </div>        <button class="btn btn-default" type="button">            <span class="glyphicon glyphicon-plus"></span>        </button>		',events:{"click button":"addContact","keyup .searching":"searchList"},initialize:function(){this.render()},render:function(){$(this.el).html(this.template)},addContact:function(){j||(this.collection.trigger("addContact"),g&&this.collection.trigger("showViewport"))},searchList:function(){this.collection.trigger("searched")}}),f.ListView=Backbone.View.extend({id:"contact-list",$container:$("#contact-list-column"),initialize:function(){this.listenTo(this.collection,"add searched edited",this.populate),this.render()},render:function(){this.$container.append(this.$el),this.populate()},populate:function(){var a=this;this.collection.search($(".searching").val()).forEach(function(b){new f.ListingView({model:b,collection:a.collection})})}}),f.ListingView=Backbone.View.extend({className:"contact-listing row",$container:$("#contact-list"),template:_.template('             <div class="col-xs-10 listing-name"><p><%= name %></p></div>             <div class="delete-contact col-xs-2 glyphicon glyphicon-trash"></div>'),events:{"click .delete-contact":"listDelete","click .listing-name":"pickName"},initialize:function(){this.listenTo(this.model,"destroy",this.removeView),this.listenTo(this.model,"notMobile",this.notMobile),this.listenTo(this.model,"pick",this.pickName),this.listenTo(this.collection,"add edited searched",this.removeView),this.render()},render:function(){var a=this.template({name:this.model.get("last")+", "+this.model.get("first")});this.$el.html(a),this.$container.append(this.$el),this.model.cid!==i||g||this.$el.addClass("picked")},listDelete:function(){this.model.destroy()},notMobile:function(){this.$el.addClass("picked")},pickName:function(){i=this.model.cid,g?this.collection.trigger("showViewport"):($(".picked").removeClass("picked"),this.$el.addClass("picked")),this.collection.trigger("pickName")},removeView:function(){this.remove(),this.stopListening()}}),f.ViewportInfoView=Backbone.View.extend({template:_.template('		<form>			<p>First Name:<input class="info-input" name="first" type="text" value="<%= first %>" readonly></p>			<p>Last Name:<input class="info-input" name="last" type="text" value="<%= last %>"" readonly></p>			<p>Phone Number:<input class="info-input" name="phone" type="text" value="<%= phone %>"" readonly></p>		</form>		<div id="validationContainer"> 		<p class="validationMessage">Please enter a valid first name.</p> 		<p class="validationMessage">Please enter a valid last name.</p> 		<p class="validationMessage">Please enter a valid 10-digit phone number.</p> 		</div> 	'),initialize:function(){this.listenTo(this.collection,"pickName",this.changeModel,this),this.listenTo(this.collection,"addContact",this.newModel,this),this.listenTo(this.collection,"edit",this.edit,this),this.render()},render:function(){var a=this.template({first:this.model.get("first"),last:this.model.get("last"),phone:this.model.get("phone")});this.$el.html(a),this.$el.find('input[name="phone"]').mask("(000) 000-0000")},changeModel:function(){this.model=this.collection.get({cid:i}),this.render()},edit:function(){var a=$(".button-edit").find("span"),b=$(".info-input"),c=[];if(j){if(b.each(function(){c.push($(this).val())}),!this.validate(c))return!1;this.model.set({first:c[0],last:c[1],phone:c[2]}),a.removeClass("glyphicon-floppy-save"),h&&(console.log("create contact"),this.collection.add(this.model),h=!1),this.render(),i=this.model.cid,this.collection.trigger("edited"),j=!1}else j=!0,b.attr("readonly",!1).addClass("active-edit"),a.addClass("glyphicon-floppy-save")},newModel:function(){this.model=i,this.render(),this.edit()},validate:function(a){var b=a[2].split(/[-()\s]/gi).join(""),c=/^[a-zA-Z]+$/.test(a[0]),d=/^[a-zA-Z]+$/.test(a[1]),e=/^\d{10}$/.test(b),f=[c,d,e],g=c&&d&&e;if(g)return!0;var h=0;f.forEach(function(a){a||($($(".info-input")[h]).css("border","1px solid red"),$($(".validationMessage")[h]).show(),console.log($(".validationMessage")[h])),h++})}}),f.ViewportView=Backbone.View.extend({model:f.Contact,className:"contact-info row",$container:$("#contact-view"),template:_.template('             <div class="col-sm-12">                 <div class="contact-view-button-wrapper">					<button class="btn btn-default button-back" type="button">						<span class="glyphicon glyphicon-menu-left"></span>					</button>                    <button class="btn btn-default button-edit" type="button">                        <span class="glyphicon glyphicon-pencil"></span>                    </button>                    <button class="btn btn-default button-delete" type="button">                        <span class="glyphicon glyphicon-trash"></span>                    </button>                </div>                <h3><%= first %> <%= last %></h3>                <div class="contact-fields">                </div>            </div>	'),events:{"click .button-edit":"edit","click .button-delete":"delete","click .button-back":"showList"},initialize:function(){var a=this;this.listenTo(this.collection,"pickName",this.changeModel),this.listenTo(this.collection,"addContact",this.newModel),this.listenTo(this.collection,"add change",this.subRender),this.render(),new f.ViewportInfoView({model:a.model,collection:a.collection,el:".contact-fields"})},render:function(){var a=this.template({first:this.model.get("first"),last:this.model.get("last")});this.$el.html(a),this.$container.append(this.$el)},changeModel:function(){this.model=this.collection.get({cid:i}),this.subRender()},"delete":function(){j||this.model.destroy()},edit:function(){this.collection.trigger("edit")},newModel:function(){this.model=i,h=!0,this.subRender()},subRender:function(){var a=this.model.get("first")?this.model.get("first")+" "+this.model.get("last"):"New Contact";this.$el.find("h3").html(a)},showList:function(){this.collection.trigger("showList")}}),f.List=Backbone.Collection.extend({model:f.Contact,localStorage:new Backbone.LocalStorage("phonebook-store"),comparator:function(a){var b=a.get("last")+a.get("first");return b.toLowerCase()},initialize:function(){var a=this;this.on("showList",this.showList,this),this.on("showViewport",this.showViewport,this),this.on("pickName",this.changeViewport,this),this.on("addContact",this.addContact,this),this.on("remove",this.findIndex,this),this.on("edited",this.sort,this),this.on("edited searched",this.pickContact,this),this.on("change add edited",this.saveIt),localStorage.length?this.fetch():(this.reset(k),this.forEach(function(a){a.save()})),i=this.at(0).cid,new f.SearchView({collection:a}),new f.ListView({collection:a}),d=new f.ViewportView({collection:a,model:this.at(0)})},addContact:function(){j||(i=new f.Contact({}),$(".contact-listing").removeClass("picked"))},changeViewport:function(){d.trigger("changeViewportModel")},findIndex:function(){a(this),this.length&&this.pickContact()},pickContact:function(){g||this.get(i).trigger("pick")},saveIt:function(){this.forEach(function(a){a.save()})},search:function(a){if(""===a)return this;var b=new RegExp(a,"i");return this.filter(function(a){return b.test(a.get("last")+" "+a.get("first"))})},showViewport:function(){$("#contact-list-column").animate({left:"-100%"},500,function(){$(this).hide()}),$("#contact-view").show(),$("#contact-view").animate({left:"0"},500),e="viewport"},showList:function(){$("#contact-view").animate({left:"100%"},500,function(){$(this).hide()}),$("#contact-list-column").show(),$("#contact-list-column").animate({left:"0"},500),$(".top-bar").css("width","100%"),e="list"}}),$(document).ready(function(){function a(){$(".top-bar").innerWidth($(".top-bar").parent().innerWidth())}var c=new f.List;a(),b(c),$(window).resize(function(){b(c),a()})}),f}();