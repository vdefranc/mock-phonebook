var phonebook=window.phonebook||function(){var a,b=!1,c=0,d=!1,e=Backbone.Model.extend({first:"New",last:"Contact",phone:"Enter Number",email:"Enter Email",initialize:function(){}}),f=[{first:"Adam",last:"Johnson",phone:"111-111-1111"},{first:"Vinny",last:"DeFrancesco",phone:"111-111-1111"},{first:"Corey",last:"Tucker",phone:"111-111-1111"},{first:"Emma",last:"Lydon",phone:"111-111-1111"}],g=Backbone.View.extend({el:".top-bar",template:' 		<div class="col-xs-10">            <div class="search-group has-feedback">                <i class="glyphicon glyphicon-search form-control-feedback"></i>                <input type="search" class="form-control" placeholder="Search..."></input>            </div>        </div>        <button class="btn btn-default" type="button">            <span class="glyphicon glyphicon-plus"></span>        </button>		',initialize:function(){this.render()},render:function(){$(this.el).html(this.template)},events:{"click button":"addContact"},addContact:function(){b||(d=!0,this.collection.trigger("addContact"))}}),h=Backbone.View.extend({id:"contact-list",$container:$("#contact-list-column"),initialize:function(){this.render();this.listenTo(this.collection,"add",this.populate),this.populate()},render:function(){this.$container.append(this.$el)},populate:function(){var a=this;this.collection.forEach(function(b){new i({model:b,collection:a.collection})})}}),i=Backbone.View.extend({className:"contact-listing row",$container:$("#contact-list"),template:_.template('             <div class="col-xs-10 listing-name"><p><%= name %></p></div>             <div class="delete-contact col-xs-2 glyphicon glyphicon-trash"></div>'),events:{"click .delete-contact":"listDelete","click .listing-name":"pickName"},initialize:function(){this.render(),this.listenTo(this.model,"change",this.render),this.listenTo(this.model,"destroy",this.removeView),this.listenTo(this.collection,"add",this.removeView)},render:function(){var a=this.template({name:this.model.get("last")+", "+this.model.get("first")});this.$el.html(a),this.$container.append(this.$el)},listDelete:function(){this.model.destroy()},removeView:function(){this.remove(),this.stopListening()},pickName:function(){c=this.model.cid,this.collection.trigger("pickName")}}),j=Backbone.View.extend({template:_.template('		<form>			<p>First Name:<input name="first" type="text" value="<%= first %>" readonly></p>			<p>Last Name:<input name="last" type="text" value="<%= last %>"" readonly></p>			<p>Phone Number:<input name="phone" type="text" value="<%= phone %>"" readonly></p>		</form>	'),events:{},initialize:function(){this.render(),this.listenTo(this.collection,"pickName",this.changeModel,this),this.listenTo(this.collection,"addContact",this.newModel,this),this.listenTo(this.collection,"edit",this.edit,this)},render:function(){var a=({first:this.model.get("first"),last:this.model.get("last"),phone:this.model.get("phone")},this.template({first:this.model.get("first"),last:this.model.get("last"),phone:this.model.get("phone")}));this.$el.html(a)},changeModel:function(){this.model=this.collection.get({cid:c}),this.render()},newModel:function(){this.model=c,this.render(),this.edit()},edit:function(){var a=$(".edit").find("span");if(b){this.$el.find("input").attr("readonly",!0).removeClass("active-edit");var c=this.$el.find("input"),e=[];c.each(function(){e.push($(this).val())}),this.model.set({first:e[0],last:e[1],phone:e[2]}),this.render(),a.removeClass("glyphicon-floppy-save").addClass("glyphicon-edit"),d&&(this.collection.add(this.model),d=!1),b=!1}else b=!0,this.$el.find("input").attr("readonly",!1).addClass("active-edit"),a.removeClass("glyphicon-edit").addClass("glyphicon-floppy-save")}}),k=Backbone.View.extend({model:e,className:"contact-info row",$container:$("#contact-view"),template:_.template('             <div class="col-sm-12">                <h3><%= first %> <%= last %></h3>                 <div class="contact-view-button-wrapper">                    <button class="btn btn-default edit" type="button">                        <span class="glyphicon glyphicon-edit"></span>                    </button>                    <button class="btn btn-default delete" type="button">                        <span class="glyphicon glyphicon-trash"></span>                    </button>                </div>                <div class="contact-fields">                </div>            </div>	'),events:{"click .edit":"edit","click .delete":"delete"},initialize:function(){var a=this;this.listenTo(this.model,"destroy",this.newModel),this.listenTo(this.collection,"pickName",this.changeModel),this.listenTo(this.collection,"addContact",this.newModel),this.listenTo(this.model,"change",this.subRender),this.render(),new j({model:a.model,collection:a.collection,el:".contact-fields"})},render:function(){var a=({first:this.model.get("first"),last:this.model.get("last")},this.template({first:this.model.get("first"),last:this.model.get("last")}));this.$el.html(a),this.$container.append(this.$el)},edit:function(){this.collection.trigger("edit")},"delete":function(){this.model.destroy(),this.newModel()},newModel:function(){this.model=c,this.subRender()},changeModel:function(){this.model=this.collection.get({cid:c}),this.subRender()},subRender:function(){var a=this.model.get("first")+" "+this.model.get("last");this.$el.find("h3").html(a)}}),l=Backbone.Collection.extend({model:e,initialize:function(){this.reset(f);var b=this;this.on("pickName",this.changeViewportModel,this),this.on("addContact",this.addContact,this),new g({collection:b}),new h({collection:b}),a=new k({collection:b,model:this.at(c)})},addContact:function(){c=new e({first:"New",last:"Contact",phone:"Enter Number",email:"Enter Email"})},changeViewportModel:function(){a.trigger("changeViewportModel")}});$(document).ready(function(){new l})}();